# Valid Sudoku
class Solution:
    def isValidSudoku(self, board: [[str]]) -> bool:
        lenr, lenc = len(board), len(board[0])
        flatBoard = [0 if board[r][c] == "." else int(board[r][c]) for r in range(lenr) for c in range(lenc)]
        #print(flatBoard)
        # check rows
        for i in range(9):
            temp = []
            for j in range(9):
                temp.append(flatBoard[(9 * i) + j])
            # print(temp)
            if sum(temp) != sum(set(temp)):
                return False

        # check columns
        for i in range(9):
            temp = []
            for j in range(9):
                temp.append(flatBoard[(9 * j) + i])
            # print(temp)
            if sum(temp) != sum(set(temp)):
                return False

        # check sub-boxes
        d = {}
        for i in range(9):
            for j in range(9):
                if (i // 3, j // 3) in d:
                    d[(i // 3, j // 3)].append(flatBoard[(9 * i) + j])
                else:
                    d[(i // 3, j // 3)] = []
                    d[(i // 3, j // 3)].append(flatBoard[(9 * i) + j])
        for temp in d.values():
            if sum(temp) != sum(set(temp)):
                #print("Invalid Box")
                return False

        return True


s = Solution()

# print(s.isValidSudoku(board=
#                      [["0", "1", "2", "3", "4", "5", "6", "7", "8"]
#                          , ["9", "10", "11", "12", "13", "14", "15", "16", "17"]
#                          , ["18", "19", "20", "21", "22", "23", "24", "25", "26"]
#                          , ["8", ".", ".", ".", "6", ".", ".", ".", "3"]
#                          , ["4", ".", ".", "8", ".", "3", ".", ".", "1"]
#                          , ["7", ".", ".", ".", "2", ".", ".", ".", "6"]
#                          , [".", "6", ".", ".", ".", ".", "2", "8", "."]
#                          , [".", ".", ".", "4", "1", "9", ".", ".", "5"]
#                          , [".", ".", ".", ".", "8", ".", ".", "7", "9"]]))

print(s.isValidSudoku(board=
                      [["5", "3", ".", ".", "7", ".", ".", ".", "."]
                          , ["6", ".", ".", "1", "9", "5", ".", ".", "."]
                          , [".", "9", "8", ".", ".", ".", ".", "6", "."]
                          , ["8", ".", ".", ".", "6", ".", ".", ".", "3"]
                          , ["4", ".", ".", "8", ".", "3", ".", ".", "1"]
                          , ["7", ".", ".", ".", "2", ".", ".", ".", "6"]
                          , [".", "6", ".", ".", ".", ".", "2", "8", "."]
                          , [".", ".", ".", "4", "1", "9", ".", ".", "5"]
                          , [".", ".", ".", ".", "8", ".", ".", "7", "9"]]))

print(s.isValidSudoku(board=
                      [["8", "3", ".", ".", "7", ".", ".", ".", "."]
                          , ["6", ".", ".", "1", "9", "5", ".", ".", "."]
                          , [".", "9", "8", ".", ".", ".", ".", "6", "."]
                          , ["8", ".", ".", ".", "6", ".", ".", ".", "3"]
                          , ["4", ".", ".", "8", ".", "3", ".", ".", "1"]
                          , ["7", ".", ".", ".", "2", ".", ".", ".", "6"]
                          , [".", "6", ".", ".", ".", ".", "2", "8", "."]
                          , [".", ".", ".", "4", "1", "9", ".", ".", "5"]
                          , [".", ".", ".", ".", "8", ".", ".", "7", "9"]]))

print(s.isValidSudoku(board=
                      [["9", "3", ".", ".", "7", ".", ".", ".", "."]
                          , ["6", ".", ".", "1", "9", "5", ".", ".", "."]
                          , [".", "9", "8", ".", ".", ".", ".", "6", "."]
                          , ["8", ".", ".", ".", "6", ".", ".", ".", "3"]
                          , ["4", ".", ".", "8", ".", "3", ".", ".", "1"]
                          , ["7", ".", ".", ".", "2", ".", ".", ".", "6"]
                          , [".", "6", ".", ".", ".", ".", "2", "8", "."]
                          , [".", ".", ".", "4", "1", "9", ".", ".", "5"]
                          , [".", ".", ".", ".", "8", ".", ".", "7", "9"]]))
